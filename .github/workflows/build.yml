name: Build and Package

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Create Maven settings.xml for private packages
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <settings>
            <servers>
              <server>
                <id>api</id>
                <username>ady88</username>
                <password>${{ secrets.PACKAGES_TOKEN }}</password>
              </server>
              <server>
                <id>core</id>
                <username>ady88</username>
                <password>${{ secrets.PACKAGES_TOKEN }}</password>
              </server>
              <server>
                <id>github</id>
                <username>ady88</username>
                <password>${{ secrets.PACKAGES_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Clean and compile
        run: mvn clean compile
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Copy dependencies for jlink
        run: mvn dependency:copy-dependencies -DoutputDirectory=target/dependencies
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Test jlink compatibility
        run: |
          echo "=== Testing jlink compatibility for helper.lib module ==="
          # Include dependencies in module path for jlink
          jlink --module-path target/classes:target/dependencies:$JAVA_HOME/jmods \
                --add-modules helper.lib \
                --output custom-runtime-lib \
                --compress 2
          echo "Helper-lib jlink test successful"
          ls -la custom-runtime-lib/
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Run tests
        run: mvn test
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Package JAR
        run: mvn package
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: helper-lib-jar
          path: target/*.jar
          retention-days: 30

      - name: Deploy to GitHub Packages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
        run: mvn deploy -DskipTests
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}